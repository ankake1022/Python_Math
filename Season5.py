#行列
import numpy as np

#行列の演算
A = np.matrix([[50, 40], [10, 10]])   #matrix()関数で行列を定義
B = np.matrix([[30, 100], [20, 15]])  #matrix()関数で行列を定義
print(A+B)
print("----------------")
#ほとんど二次元配列と変わらないが、行列との決定的な違いとして「掛け算」の動作がことなる
A = np.matrix([[1, 3], [2, 1]])
B = np.matrix([[150, 250], [130, 230]])
print(A*B)
print("----------------")
#行列の掛け算は要素ずつ計算するのではなくある規則(ノートに記載)に乗っ取った計算をする

#列の数が違う行列の掛け算(「l*m行列」*「m*n行列」)
A = np.matrix([[1, 3], [2, 1]])
B = np.matrix([[145], [72]])
print(A*B)
print("----------------")

#逆行列を求める
A = np.matrix([[5, 3], [2, 1]])
B = np.linalg.inv(A)  #逆配列を求める関数(linalgは線形代数用の関数が定義されたモジュール)
print(B)
print("----------------")

#逆行列を利用して連立方程式を解く
A = np.matrix([[5, 3],
               [2, 1]])  #元の行列(連立方程式の左辺)
inv_A = np.linalg.inv(A)         #逆行列
B = np.matrix([[9], [4]])        #連立方程式の右辺
print(inv_A*B)
print("----------------")
